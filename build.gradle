buildscript {
	repositories {
		maven { url = "https://maven.minecraftforge.net/" }
		maven { url = 'https://maven.parchmentmc.org' }
		maven { url = "https://repo.spongepowered.org/maven" }
		mavenCentral()
	}
	dependencies {
		classpath(group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true)
		classpath 'org.parchmentmc:librarian:1.+'
		classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
	}
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: "org.spongepowered.mixin"
apply plugin: "eclipse"
apply plugin: "maven-publish"

version = "${mc_version}-${mod_version}"
group = project.group 
archivesBaseName = project.modid

java.toolchain.languageVersion = JavaLanguageVersion.of 17

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: project.mappings_channel, version: project.mappings_version
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            arg "-mixin.config=${modid}.mixins.json"
			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'examplemod'

            mods {
                autoreconnect {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            arg "-mixin.config=${modid}.mixins.json"
			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'examplemod'

            mods {
                autoreconnect {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            arg "-mixin.config=${modid}.mixins.json"
			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'examplemod'

            mods {
                autoreconnect {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            arg "-mixin.config=${modid}.mixins.json"
			property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'autoreconnect', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                autoreconnect {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

mixin {
	add sourceSets.main, "${modid}.refmap.json"
	config "${modid}.mixins.json"

	debug.export = true
}

repositories {
    maven {
		url = "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
	}
}

dependencies {
        minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
        annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

	implementation  fg.deobf("curse.maven:configured-457570:${configured_version}")
	implementation  fg.deobf("curse.maven:catalogue-459701:${catalogue_version}")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_name,
                "Specification-Vendor"    : "RDM Studios",
                "Specification-Version"   : "1", 
                "Implementation-Title"    : project.mod_name,
                "Implementation-Version"  : project.mod_version,
                "Implementation-Vendor"   : "RDM Studios",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "autoreconnect.mixins.json"
        ])
    }
}

processResources {
	exclude '**/.cache/'

	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' 
}
